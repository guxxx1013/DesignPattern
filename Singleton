//method 1:
public class Singleton {
  private Singleton(){}
  private static Singleton instance = null;
  public static synchronized Singleton getInstance() {
    if (instance == null) {
      instance = new Singleton();
    }
    return instance;
  }
}
//method 2:
public class Singleton {
  private Singleton() {}
  private static Singleton instance = new Singleton();
  public static Singleton getInstance() {
    return instance;
  }
}


public class SingletonPatternDemo {
   public static void main(String[] args) {

      //illegal construct
      //Compile Time Error: The constructor SingleObject() is not visible
      //SingleObject object = new SingleObject();

      //Get the only object available
      Singletont object = Singleton.getInstance();
   }
}
